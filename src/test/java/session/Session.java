package session;

import browser.FactoryBrowser;
import org.openqa.selenium.WebDriver;

public class Session {
    //maneja la sesion desde cualquier lugar
    //usando singleton
    //atributo y constructor privado y metodo estatico publico
    private static Session session = null;
    //recibe el factory de los drivers
    private WebDriver driver;
    //constructor privado
    //llama al factory
    //se crea una sola vez, es decir una sola instancia
    //esa es la idea principal
    private Session() {
        driver = FactoryBrowser.make("owasp").create();
    }
    //contiene la condicion que garantiza que el objeto es unico

    public static Session getInstance() {
        if (session == null)
            session = new Session();

        return session;
    }

    public void closeBrowser(){
        driver.close();
        session = null;
    }

    public WebDriver getDriver() {
        return driver;
    }
}
